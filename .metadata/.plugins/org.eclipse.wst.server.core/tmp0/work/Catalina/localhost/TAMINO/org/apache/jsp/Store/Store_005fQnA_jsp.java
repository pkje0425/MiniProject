/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.42
 * Generated at: 2020-03-19 12:50:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Store;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import dto.MemberDto;
import dto.StoreQnADto;
import java.util.List;

public final class Store_005fQnA_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {


public String arrow(int depth){
	String rs = "<img src='./image/arrow.png' width='20px' height='20px'>&nbsp;&nbsp;";
	String nbsp = "&nbsp;&nbsp;&nbsp;&nbsp;";
	
	String ts = "";
	for(int i = 0; i < depth; i++){
		ts += nbsp;
	}
	return depth==0?"":ts+rs;
}

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("dto.StoreQnADto");
    _jspx_imports_classes.add("dto.MemberDto");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');

List<StoreQnADto> list = (List<StoreQnADto>)request.getAttribute("QnAList");
int pages = (int)request.getAttribute("pages");

MemberDto logindto = (MemberDto)session.getAttribute("login");
String product_seq = request.getAttribute("product_seq") + "";
String product_name = request.getAttribute("product_name") + "";
System.out.println("product_seq");

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/TAMINO/Store/css/Store_QnA.css?after\">\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css?family=Noto+Sans+KR:100,300,400|Roboto|Roboto+Mono|Viga&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write(".modal{\r\n");
      out.write("\tdisplay: none;\r\n");
      out.write("\tposition: fixed;\r\n");
      out.write("\tz-index: 1;\r\n");
      out.write("\tbackground-color: rgb(0,0,0,0);\r\n");
      out.write("\t/* padding-top: 5%; */\r\n");
      out.write("\tleft: 0;\r\n");
      out.write("\ttop: 0;\r\n");
      out.write("\twidth: 100%;\r\n");
      out.write("\theight: 100%;\r\n");
      out.write("\toverflow: auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".modal_content{\r\n");
      out.write("\t  background-color: #fff;\r\n");
      out.write("\t  margin: auto;\r\n");
      out.write("\t  padding: 20px;\r\n");
      out.write("\t  border: 1px solid #888;\r\n");
      out.write("\t  width: 70%;\r\n");
      out.write("\t  height: 430px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".close{\r\n");
      out.write("\tfloat: right;\r\n");
      out.write("\tdisplay: inline-block;\r\n");
      out.write("\tsize: 15px 15px;\r\n");
      out.write("\tcursor: pointer;\r\n");
      out.write("\tmargin-left: 15px;\r\n");
      out.write("\tmargin-right: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

	String currId = "guest";
	if( request.getSession().getAttribute("login") != null ){
		MemberDto loginDto = (MemberDto)request.getSession().getAttribute("login");
		currId = loginDto.getEmail();
	}


      out.write("\r\n");
      out.write("<input type=\"hidden\" value=\"");
      out.print(currId );
      out.write("\" id=\"currId\"> \r\n");
      out.write("<div align=\"center\">\r\n");
      out.write("<div class=\"qnacaption\">Q&A Board</div>\r\n");
      out.write("<table border=\"1\" class=\"qnatable\">\r\n");
      out.write("<col width=\"50px\"><col width=\"150px\"><col width=\"500px\"><col width=\"200px\"><col width=\"150px\">\r\n");
      out.write("\t<thead>\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<th>No.</th><th>분류</th><th>제목</th><th>작성자</th><th>작성일</th>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t</thead>\r\n");
      out.write("\t");
 if(list.size() == 0 || list == null){
      out.write("\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td colspan=\"5\" align=\"center\">작성된 QnA가 없습니다.</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t");
	
	}else{
		for(int i=0; i<list.size(); i++){
			StoreQnADto dto = list.get(i);
		
      out.write("\r\n");
      out.write("\t\t\t<tr class=\"boardrow\">\r\n");
      out.write("\t\t\t\t<td align=\"center\">");
      out.print(i+1 );
      out.write("</td>\r\n");
      out.write("\t\t\t\t");
if(dto.getQna_del() == 1){
      out.write("\r\n");
      out.write("\t\t\t\t\t<td colspan=\"4\" class=\"Deltitle\">삭제된 게시글</td>\r\n");
      out.write("\t\t\t\t");

				}else{
      out.write("\r\n");
      out.write("\t\t\t\t\t<td align=\"center\">");
      out.print(dto.getQna_category() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td class=\"QnAtitle\" seq=");
      out.print(dto.getQna_seq() );
      out.write(" writeId=\"");
      out.print(dto.getQna_email() );
      out.write("\" parent=");
      out.print(dto.getQna_parent() );
      out.write(">\r\n");
      out.write("\t\t\t\t\t\t");
      out.print(arrow(dto.getQna_depth()) );
      out.print(dto.getQna_title() );
      out.write("\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t<td align=\"center\">");
      out.print(dto.getQna_email() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td align=\"center\">");
      out.print(dto.getQna_wdate().subSequence(0, 10) );
      out.write("</td>\r\n");
      out.write("\t\t\t\t");

				}
				
      out.write("\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t");

		}
	}
	
      out.write("\r\n");
      out.write("\t<tr class=\"last_tr\">\r\n");
      out.write("\t\t<td colspan=\"5\" align=\"right\">\r\n");
      out.write("\t\t\t<button type=\"button\" class=\"writeModal\">작성하기</button>\r\n");
      out.write("\t\t</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("</table>\r\n");
      out.write("</div>\r\n");
      out.write("<div class=\"pages\">\r\n");
for(int i = 1; i <= pages; i++){
      out.write("\r\n");
      out.write("\t<a href=\"/TAMINO/StoreCtrl?command=QnAList&page=");
      out.print(i );
      out.write("&product_seq=");
      out.print(product_seq );
      out.write('"');
      out.write('>');
      out.print(i );
      out.write("</a>\r\n");

}

      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div id=\"modal_layer1\" class=\"modal\">\r\n");
      out.write("\t<div id=\"modal_layer2\" class=\"modal_content\">\r\n");
      out.write("\t\t<div class=\"close\" id=\"close_span\"><img src=\"/TAMINO/image/close.png\" width=\"15px\" height=\"15px\"></div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<form id=\"QnAfrm\">\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"product_seq\" value=\"");
      out.print(product_seq );
      out.write("\">\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"qna_email\" value=\"");
      out.print(currId );
      out.write("\">\r\n");
      out.write("\t\t\t<table class=\"modaltable\">\r\n");
      out.write("\t\t\t<col width=\"200\"><col width=\"400\">\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>제목</th>\r\n");
      out.write("\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" id=\"QnAtitle_txt\" name=\"qna_title\" placeholder=\"제목을 입력하세요\">\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>작성자</th>\r\n");
      out.write("\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t");
 if(logindto == null){
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t익명\r\n");
      out.write("\t\t\t\t\t\t");

						}else{
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t");
      out.print(currId );
      out.write("\r\n");
      out.write("\t\t\t\t\t\t");
	
						}
						
      out.write("\t\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>상품명</th>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(product_name );
      out.write("</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>분류</th>\r\n");
      out.write("\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t<select name=\"qna_category\" class=\"qnaselect\">\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"notselect\">분류선택</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"배송문의\">배송문의</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"상품문의\">상품문의</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"기타\">기타</option>\r\n");
      out.write("\t\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>내용</th>\r\n");
      out.write("\t\t\t\t\t<td align=\"center\">\r\n");
      out.write("\t\t\t\t\t\t<textarea id=\"qnatextarea\" name=\"qna_content\" rows=\"8\" style=\"width: 95%\"></textarea>\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td colspan=\"2\" align=\"center\"> \r\n");
      out.write("\t\t\t\t\t\t<button type=\"button\" id=\"writeBtn\">작성하기</button>\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t\t\r\n");
      out.write("\t</div>\t\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("$(function () {\r\n");
      out.write("\r\n");
      out.write("\t$(\".writeModal\").click(function() {\r\n");
      out.write("\t\tif($(\"#currId\").val() == \"guest\"){/* 로그인 하지 않은 경우 */\r\n");
      out.write("\t\t\talert(\"QnA작성은 로그인 후 하실 수 있습니다.\");\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\t$(\"#modal_layer1\").css(\"display\", \"block\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t$(\"#close_span\").click(function () {\r\n");
      out.write("\t\t$(\"#modal_layer1\").css(\"display\", \"none\");\r\n");
      out.write("\t\t$(\"#QnAtitle_txt\").val(\"\");\r\n");
      out.write("\t\t$(\"select[name=qna_category]\").val(\"notselect\").attr(\"selected\", \"selected\");\r\n");
      out.write("\t\t$(\"textarea[name=qna_content]\").val(\"\");\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t$(\"#writeBtn\").click(function () {\r\n");
      out.write("\t\tif($.trim($(\"#QnAtitle_txt\").val()) == \"\" || $.trim($(\"textarea[name=qna_content]\").val()) == \"\"){\r\n");
      out.write("\t\t\talert(\"제목과 내용은 필수로 입력해주십시오\");\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif($(\"select[name=qna_category]\").val() == \"notselect\"){\r\n");
      out.write("\t\t\talert(\"분류를 선택해주세요\");\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\tvar formData = $(\"#QnAfrm\").serialize();\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\ttype: 'get',\r\n");
      out.write("\t\t\t\turl: '/TAMINO/StoreCtrl?command=QnAInsert',\r\n");
      out.write("\t\t\t\tdata: formData, \r\n");
      out.write("\t\t\t\tdatatype : 'json',\r\n");
      out.write("\t\t\t\tsuccess: function () {\r\n");
      out.write("\t\t\t\t\t//alert(\"성공\");\r\n");
      out.write("\t\t\t\t\tlocation.href = \"/TAMINO/StoreCtrl?command=QnAList&product_seq=\"+");
      out.print(product_seq );
      out.write(";\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\terror: function () {\r\n");
      out.write("\t\t\t\t\talert(\"에러\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t})\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t$(\".QnAtitle\").click(function () {\r\n");
      out.write("\t\tvar allow =\"\";\r\n");
      out.write("\t\tvar seq = $(this).attr(\"seq\");\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif($(this).attr(\"writeId\") == \"admin\"){\r\n");
      out.write("\t\t\tvar myId = $(\"#currId\").val();\r\n");
      out.write("\t\t\tvar parent_seq = $(this).attr(\"parent\");\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\ttype:'get',\r\n");
      out.write("\t\t\t\turl: '/TAMINO/StoreCtrl?command=myReply',\r\n");
      out.write("\t\t\t\tasync:false,\r\n");
      out.write("\t\t\t\tdata: {\"parent_seq\": parent_seq, \"myId\" : myId},\r\n");
      out.write("\t\t\t\tdatatype: 'json',\r\n");
      out.write("\t\t\t\tsuccess: function (data) {\r\n");
      out.write("\t\t\t\t\t//alert(\"성공\");\r\n");
      out.write("\t\t\t\t\tconsole.log(data);\r\n");
      out.write("\t\t\t\t\tallow = data.trim();\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\terror: function () {\r\n");
      out.write("\t\t\t\t\talert(\"에러\");\r\n");
      out.write("\t\t\t\t}\t\t\t\t\t\t\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\tconsole.log(\"ajax 완료: \" + allow);\r\n");
      out.write("\t\t\tif(allow === \"ok\"){\r\n");
      out.write("\t\t\t\tlocation.href = \"/TAMINO/StoreCtrl?command=QnADetail&seq=\" + seq;\t\r\n");
      out.write("\t\t\t}else if(allow === \"no\"){\r\n");
      out.write("\t\t\t\talert(\"본인이 작성한 글의 답변만 열람 가능합니다.\");\t\t\t\t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}else if($(this).attr(\"writeId\") != \"admin\"){\r\n");
      out.write("\t\t\tif($(\"#currId\").val() != $(this).attr(\"writeId\")){\r\n");
      out.write("\t\t\t\talert(\"본인이 작성한 글만 열람 가능합니다.\");\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}else {\r\n");
      out.write("\t\t\t\tlocation.href = \"/TAMINO/StoreCtrl?command=QnADetail&seq=\"+$(this).attr(\"seq\");\t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t$(\".Deltitle\").click(function () {\r\n");
      out.write("\t\talert(\"삭제된 게시글은 열람할 수 없습니다\");\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

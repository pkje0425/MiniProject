/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.42
 * Generated at: 2020-03-19 12:50:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Store;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Date;
import java.util.Enumeration;
import java.util.ArrayList;
import dto.MemberDto;
import util.UtilityClass;
import dto.OrderListDto;
import java.util.List;

public final class Store_005fCart_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("util.UtilityClass");
    _jspx_imports_classes.add("java.util.Enumeration");
    _jspx_imports_classes.add("java.util.Date");
    _jspx_imports_classes.add("dto.MemberDto");
    _jspx_imports_classes.add("dto.OrderListDto");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

MemberDto loginDto = null;

String currId = "guest";
if( request.getSession().getAttribute("login") != null ){
	loginDto = (MemberDto)request.getSession().getAttribute("login");
	currId = loginDto.getEmail();
}

/* List<OrderListDto> list = (List<OrderListDto>)session.getAttribute("cartlist"); */
List<OrderListDto> list = new ArrayList<OrderListDto>();

boolean sessioncheck = false;

Enumeration em = session.getAttributeNames();
while(em.hasMoreElements()) {
	String sessionName = em.nextElement().toString();
	System.out.println("세션 명: " + sessionName);
	if(!sessionName.equals("login")){
		sessioncheck = true;
		break;
	}	
}

if(sessioncheck){
	list = (List<OrderListDto>)session.getAttribute(loginDto.getEmail());
	
}

if(list.isEmpty()){
	System.out.println("카트리스트 없음");
}else{
	System.out.println("카트리스트 있음");
	System.out.println(list.size());
}



      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/TAMINO/Store/css/Store_Cart.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/TAMINO/Store/css/MyPageOverlay.css\">\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css?family=Noto+Sans+KR|Roboto|Roboto+Mono|Viga&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write(".modal{\r\n");
      out.write("\tdisplay: none;\r\n");
      out.write("\tposition: fixed;\r\n");
      out.write("\tz-index: 1;\r\n");
      out.write("\tbackground-color: rgb(0,0,0,0);\r\n");
      out.write("\tpadding-top: 15%;\r\n");
      out.write("\tleft: 0;\r\n");
      out.write("\ttop: 0;\r\n");
      out.write("\twidth: 100%;\r\n");
      out.write("\theight: 100%;\r\n");
      out.write("\toverflow: auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".modal_content{\r\n");
      out.write("\t  background-color: #fff;\r\n");
      out.write("\t  margin: auto;\r\n");
      out.write("\t  padding: 40px;\r\n");
      out.write("\t  border: 1px solid #888;\r\n");
      out.write("\t  width: 40%;\r\n");
      out.write("\t  height: 400px;\r\n");
      out.write("\t  padding-left: 60px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".close{\r\n");
      out.write("\tfloat: right;\r\n");
      out.write("\tsize: 20px 20px;\r\n");
      out.write("\tcursor: pointer;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".imagediv{\r\n");
      out.write("\tfloat: left;\r\n");
      out.write("\tmargin-right: 2rem;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".optiondiv{\r\n");
      out.write("\tfloat: left;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"header\">\r\n");
      out.write("\t\t<div class=\"header_container\">\r\n");
      out.write("\t\t\t<div class=\"header_content\">\r\n");
      out.write("\t\t\t\t<div class=\"logindiv\">\r\n");
      out.write("\t\t\t\t\t\t<a id=\"cart\" href = \"/TAMINO/StoreCtrl?command=goCart\"><img src=\"/TAMINO/image/cart.png\" width=\"20px\" height=\"20px\"></a>\r\n");
      out.write("\t\t\t\t\t\t<a id=\"login\" href=\"/TAMINO/MemberCtrl?command=login\">LOGIN</a>\r\n");
      out.write("\t\t\t\t\t\t<a id=\"mypage\" onclick=\"openNav()\">MY PAGE</a>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"logo\">\r\n");
      out.write("\t\t\t\t\t\t<a href=\"/TAMINO/StoreCtrl?command=StoreMain\"><img src=\"/TAMINO/image/storelogo.png\"></a>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<div class=\"navbar\">\r\n");
      out.write("\t\t\t\t\t\t<a href=\"/TAMINO/StoreCtrl?command=ProductList&category=all\">ALL</a>\r\n");
      out.write("\t\t\t\t\t\t<a href=\"/TAMINO/StoreCtrl?command=ProductList&category=clothing\">CLOTHIING</a>\r\n");
      out.write("\t\t\t\t\t\t<a href=\"/TAMINO/StoreCtrl?command=ProductList&category=accsesory\">ACCESORIES</a>\r\n");
      out.write("\t\t\t\t\t\t<a href=\"/TAMINO/StoreCtrl?command=ProductList&category=vinyl\">VINYL</a>\r\n");
      out.write("\t\t\t\t\t\t<a href=\"/TAMINO/StoreCtrl?command=ProductList&category=etc\">ETC</a>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<input type=\"hidden\" value=\"");
      out.print(currId );
      out.write("\" id=\"currId\"> \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"cartdiv\" align=\"center\">\r\n");
      out.write("<div class=\"cartcaption\">Cart</div>\r\n");
      out.write("<table class=\"cart_table\" border=\"1\">\r\n");
      out.write("<col width=\"50px\"><col width=\"150px\">\r\n");
      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("\t<td colspan=\"5\" align=\"left\">담긴 상품: 총 ");
      out.print(list.size() );
      out.write("개</td>\r\n");
      out.write("</tr>\r\n");
      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("\t<th>\r\n");
      out.write("\t\t<input type=\"checkbox\" name=\"alldel\">\r\n");
      out.write("\t</th>\r\n");
      out.write("\t<th colspan=\"3\">\r\n");
      out.write("\t\t상품정보\r\n");
      out.write("\t</th>\r\n");
      out.write("\t<th>\r\n");
      out.write("\t\t금액\r\n");
      out.write("\t</th>\r\n");
      out.write("</tr>\r\n");
      out.write("\r\n");
      out.write("<!-- 장바구니 상품 부분 -->\r\n");

if(loginDto != null && list.size() > 0){
	for(int i = 0; i < list.size(); i++){
		OrderListDto dto = list.get(i);
			/* if(loginDto.getEmail().equals(dto.getOder_email())){ */
				String image[] = dto.getProduct_image().split(",");
      out.write("\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td align=\"center\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"checkbox\" name=\"delcheck\" value=\"");
      out.print(i );
      out.write("\">\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t<img src=\"/TAMINO/product/");
      out.print(image[0] );
      out.write("\" width=\"150px\" height=\"150px\">\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t상품명 : ");
      out.print(dto.getProduct_name() );
      out.write("<br>\r\n");
      out.write("\t\t\t\t\t\tSIZE : ");
      out.print(dto.getProduct_size() );
      out.write("<br>\r\n");
      out.write("\t\t\t\t\t\t수량 : ");
      out.print(dto.getProduct_count() );
      out.write("<br>\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t<td class=\"findindex\" findindex=\"");
      out.print(i );
      out.write("\" align=\"center\">\r\n");
      out.write("\t\t\t\t\t\t<button type=\"button\" class=\"option\">옵션 변경</button>\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t<td align=\"center\" class=\"price\">\r\n");
      out.write("\t\t\t\t\t\t");
      out.print(UtilityClass.PriceConvert((dto.getProduct_price() * dto.getProduct_count())) );
      out.write("won\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t");

			/* } */
	  }
	
}else if(list.size() == 0 || list == null){
      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("\t<td colspan=\"5\">\r\n");
      out.write("\t\t장바구니에 담긴 상품이 없습니다.\r\n");
      out.write("\t</td>\r\n");
      out.write("\t\r\n");
      out.write("</tr>\r\n");
	
}

      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("\t<td colspan=\"2\">\r\n");
      out.write("\t\t<button type=\"button\" id=\"delBtn\">삭제하기</button>\r\n");
      out.write("\t</td>\r\n");
      out.write("\t<td colspan=\"3\" align=\"right\">\r\n");
      out.write("\t주문예정 금액\r\n");
      out.write("\t</td>\r\n");
      out.write("\t\r\n");
      out.write("</tr>\r\n");
      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("\t<td colspan=\"5\" align=\"right\" class=\"total\">\r\n");
      out.write("\t\t상품가격<br>\r\n");
      out.write("\t\t + 배송비(2,500원)<br>\r\n");
      out.write("\t\t= 00,000원\r\n");
      out.write("\t</td>\r\n");
      out.write("</tr>\r\n");
      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("\t<td colspan=\"5\" align=\"center\">\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<button type=\"button\" id=\"orderBtn\">전체 주문하기</button>\r\n");
      out.write("\t</td>\r\n");
      out.write("</tr>\r\n");
      out.write("</table>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div id=\"modal_layer1\" class=\"modal\">\r\n");
      out.write("\t<div id=\"modal_layer2\" class=\"modal_content\">\r\n");
      out.write("\t\t<span class=\"close\" id=\"close_span\"><img src=\"/TAMINO/image/close.png\" width=\"15px\" height=\"15px\"></span>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<form id=\"updatefrm\">\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"updateindex\" value=\"-1\">\r\n");
      out.write("\t\t\t<div class=\"imagediv\">\r\n");
      out.write("\t\t\t\t<img id=\"update_image\" width=\"300px\" height=\"300px\" style=\"margin-top: 10px;\"><br>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"optiondiv\">\r\n");
      out.write("\t\t\t<input type=\"text\" name=\"update_name\" readonly=\"readonly\"><br><br><br>\r\n");
      out.write("\t\t\t<span style=\"font-size: 9pt\">SIZE</span>&nbsp;&nbsp;&nbsp;\r\n");
      out.write("\t\t\t<select name=\"update_size\" style=\"height: 30px; width: 100px; display: none;\">\r\n");
      out.write("\t\t\t\t\t\t<option value=\"S\">S</option>\r\n");
      out.write("\t\t\t\t\t\t<option value=\"M\">M</option>\r\n");
      out.write("\t\t\t\t\t\t<option value=\"L\">L</option>\r\n");
      out.write("\t\t\t</select><br><br>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<span style=\"font-size: 9pt\">QUANTITY</span>&nbsp;&nbsp;&nbsp;\r\n");
      out.write("\t\t\t<input type=\"text\" id=\"quantity\" name=\"update_count\" onKeyup=\"this.value=this.value.replace(/[^0-9]/g,'');\" value=1>&nbsp;&nbsp;&nbsp;\r\n");
      out.write("\t\t\t<button type=\"button\" id=\"minusBtn\" class=\"plusminusbtn\">-</button>\r\n");
      out.write("\t\t\t<button type=\"button\" id=\"plusBtn\" class=\"plusminusbtn\">+</button><br><br><br>\r\n");
      out.write("\t\t\t<button type=\"button\" id=\"updateBtn\">수정완료</button>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t\t\r\n");
      out.write("\t</div>\t\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div id=\"myNav\" class=\"overlay\">\r\n");
      out.write("<a href=\"javascript:void(0)\" class=\"closebtn\" onclick=\"closeNav()\">&times;</a>\r\n");
      out.write("\t<div class=\"overlay-content\">\r\n");
      out.write("\t\t<p>MY PAGE</p>\r\n");
      out.write("    \t<a href=\"/TAMINO/MemberCtrl?command=myInfo&email=");
      out.print(currId );
      out.write("\">회원정보 수정</a>\r\n");
      out.write("    \t<a href=\"/TAMINO/MemberCtrl?command=MyOrderList\">주문내역</a>\r\n");
      out.write("  \t</div>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"footer\">\r\n");
      out.write("\t<a href=\"http://instagram.com/taminoamir\" target=\"_blank\"><img src=\"/TAMINO/image/instagram.png\" style=\"width: 30px; height: 30px;\"></a>\r\n");
      out.write("\t<a href=\"https://twitter.com/taminoamir\" target=\"_blank\"><img src=\"/TAMINO/image/twitter.png\" style=\"width: 30px; height: 30px;\"></a>\r\n");
      out.write("\t<a href=\"https://www.facebook.com/taminoamir/?ref=br_rs\" target=\"_blank\"><img src=\"/TAMINO/image/facebook.png\" style=\"width: 30px; height: 30px;\"></a>\r\n");
      out.write("\t<a href=\"https://www.youtube.com/channel/UCzoO5qFoT-7w7o7f1QqhOpA\" target=\"_blank\"><img src=\"/TAMINO/image/youtube.png\" style=\"width: 30px; height: 30px;\"></a>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("$(function () {\r\n");
      out.write("\t\r\n");
      out.write("\tif($(\"#currId\").val() != \"guest\"){\r\n");
      out.write("\t\t$(\"#login\").text(\"LOGOUT\");\r\n");
      out.write("\t\t$(\"#login\").attr(\"href\", \"/TAMINO/MemberCtrl?command=logout\");\r\n");
      out.write("\t\t$(\"#mypage\").css(\"display\", \"block\");\r\n");
      out.write("\t}else if($(\"#currId\").val() == \"guest\"){/* 로그인 하지 않은 경우 */\r\n");
      out.write("\t\talert(\"장바구니는 로그인 후 이용 가능합니다.\");\r\n");
      out.write("\t\tlocation.href = \"/TAMINO/MemberCtrl?command=login\";\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t$(\".option\").click(function () {/* 옵션 수정 */\r\n");
      out.write("\t\tvar pname;\r\n");
      out.write("\t\tvar pimage;\r\n");
      out.write("\t\tvar psize;\r\n");
      out.write("\t\tvar pcount;\r\n");
      out.write("\t\t$(\"input[name=updateindex]\").val($(this).parent().attr(\"findindex\"));\r\n");
      out.write("\t\t$(\"#modal_layer1\").css(\"display\", \"block\");\r\n");
      out.write("\t\t//alert($(this).parent().attr(\"findindex\"));\r\n");
      out.write("\t\tvar findIndex = $(this).parent().attr(\"findindex\") ;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\ttype: 'get',\r\n");
      out.write("\t\t\turl: '/TAMINO/StoreCtrl?command=findCart',\r\n");
      out.write("\t\t\tasync: false,\r\n");
      out.write("\t\t\tdata: {\"findIndex\":findIndex},\r\n");
      out.write("\t\t\tdatatype: 'json',\r\n");
      out.write("\t\t\tsuccess: function (obj) {\r\n");
      out.write("\t\t\t\t//alert(\"성공\");\r\n");
      out.write("\t\t\t\tvar data = JSON.parse(obj);\t\r\n");
      out.write("\t\t\t\tpname = data.pname;\r\n");
      out.write("\t\t\t\tconsole.log(pname);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tpimage = data.pimage;\r\n");
      out.write("\t\t\t\tconsole.log(pimage);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tpsize = data.psize;\r\n");
      out.write("\t\t\t\tconsole.log(psize);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tpcount = data.pcount;\r\n");
      out.write("\t\t\t\tconsole.log(pcount);\r\n");
      out.write("\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror: function () {\r\n");
      out.write("\t\t\t\talert(\"실패\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar where = pimage.indexOf(\",\");\r\n");
      out.write("\t\tpimage = pimage.substring(0, where);\r\n");
      out.write("\t\tconsole.log(\"자른거: \" + pimage);\r\n");
      out.write("\t\t$(\".pname\").text(pname);\r\n");
      out.write("\t\t$(\"input[name=update_name]\").val(pname);\r\n");
      out.write("\t\t$(\"#update_image\").attr(\"src\", \"/TAMINO/product/\"+pimage);\r\n");
      out.write("\t\t$(\"#quantity\").val(pcount);\r\n");
      out.write("\t\t$(\"#updateindex\").val(findIndex);\r\n");
      out.write("\t\tconsole.log(\"ajax밖 : \" + psize);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(psize == \"해당없음\"){\r\n");
      out.write("\t\t\t/* $(\"select[name=update_size]\").hide(); */\r\n");
      out.write("\t\t}else if(psize == \"S\" || psize == \"M\" || psize == \"L\"){\r\n");
      out.write("\t\t\t$(\"select[name=update_size]\").css(\"display\", \"inline-flex\");\r\n");
      out.write("\t\t\t$(\"select[name=update_size] option[value='\" + psize + \"']\").attr(\"selected\", \"selected\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t$(\".plusminusbtn\").click(function() {/* 수량버튼 */\r\n");
      out.write("\t\tvar quantity = parseInt($(\"#quantity\").val());\r\n");
      out.write("\r\n");
      out.write("\t\tif($(this).text() == \"-\"){\r\n");
      out.write("\t\t\t$(\"#quantity\").val(quantity - 1);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(parseInt($(\"#quantity\").val()) <= 0){\r\n");
      out.write("\t\t\t\talert(\"최소 수량은 1개 입니다\");\r\n");
      out.write("\t\t\t\t$(\"#quantity\").val(1);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}else if($(this).text() == \"+\"){\r\n");
      out.write("\t\t\t$(\"#quantity\").val(quantity + 1);\r\n");
      out.write("\t\t\tif(parseInt($(\"#quantity\").val()) > 10){\r\n");
      out.write("\t\t\t\talert(\"1인 당 최대 10개 까지 구매 가능합니다\");\r\n");
      out.write("\t\t\t\t$(\"#quantity\").val(10);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t$(\"#quantity\").focusout(function() {/* 수량 입력 제어 */\r\n");
      out.write("\t\tif(parseInt($(\"#quantity\").val()) <= 0){\r\n");
      out.write("\t\t\talert(\"최소 수량은 1개 입니다\");\r\n");
      out.write("\t\t\t$(\"#quantity\").val(1);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t}else if(parseInt($(\"#quantity\").val()) > 10){\r\n");
      out.write("\t\t\talert(\"1인 당 최대 10개 까지 구매 가능합니다\");\r\n");
      out.write("\t\t\t$(\"#quantity\").val(10);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t$(\"#close_span\").click(function () {\r\n");
      out.write("\t\t$(\"#modal_layer1\").css(\"display\", \"none\");\r\n");
      out.write("\t\t$(\"select[name=update_size]\").css(\"display\", \"none\");\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t$(\"#updateBtn\").click(function () {/* 수정완료 버튼 */\r\n");
      out.write("\t\tvar formData = $(\"#updatefrm\").serialize();\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\ttype: 'post',\r\n");
      out.write("\t\t\turl: '/TAMINO/StoreCtrl?command=updateCart',\r\n");
      out.write("\t\t\tdata: formData, \r\n");
      out.write("\t\t\tdatatype : 'json',\r\n");
      out.write("\t\t\tsuccess: function () {\r\n");
      out.write("\t\t\t\t//alert(\"수정완료\");\r\n");
      out.write("\t\t\t\tlocation.href = \"/TAMINO/StoreCtrl?command=goCart\";\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror: function () {\r\n");
      out.write("\t\t\t\talert(\"에러\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t})\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t$(\"input:checkbox[name='alldel']\").change(function() {\r\n");
      out.write("\t\tif($(\"input:checkbox[name='alldel']\").is(\":checked\")){\r\n");
      out.write("\t\t\t$(\"input:checkbox[name='delcheck']\").each(function () {\r\n");
      out.write("\t\t\t\t$(this).prop(\"checked\", true);\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\t$(\"input:checkbox[name='delcheck']\").each(function () {\r\n");
      out.write("\t\t\t\t$(this).prop(\"checked\", false);\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t$(\"#delBtn\").click(function () {/* 장바구니 삭제 */\r\n");
      out.write("\t\tvar checklen = $(\"input:checkbox[name='delcheck']:checked\").length;\r\n");
      out.write("\t\tconsole.log(checklen);\r\n");
      out.write("\t\tif(checklen == 0 ){\r\n");
      out.write("\t\t\talert(\"선택된 항목이 없습니다.\");\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar dels = new Array();\r\n");
      out.write("\t\t\t$(\"input:checkbox[name='delcheck']\").each(function () {\r\n");
      out.write("\t\t\t\tif($(this).is(\":checked\")){\r\n");
      out.write("\t\t\t\t\tdels.push($(this).val());\t\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar delslist = \"\";\r\n");
      out.write("\t\t\tfor(i=0; i<dels.length; i++){\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif(i == dels.length-1){\r\n");
      out.write("\t\t\t\t\tdelslist += dels[i];\r\n");
      out.write("\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\tdelslist += dels[i] + \",\";\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\ttype: 'post',\r\n");
      out.write("\t\t\t\turl: '/TAMINO/StoreCtrl?command=deleteCart',\r\n");
      out.write("\t\t\t\tdatatype : 'json',\r\n");
      out.write("\t\t\t\tdata: {\"delslist\" : delslist},\r\n");
      out.write("\t\t\t\tsuccess: function () {\r\n");
      out.write("\t\t\t\t\t//alert(\"성공\");\r\n");
      out.write("\t\t\t\t\tlocation.href = \"/TAMINO/StoreCtrl?command=goCart\";\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\terror: function () {\r\n");
      out.write("\t\t\t\t\talert(\"에러\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t})\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t$(\"#orderBtn\").click(function () {\r\n");
      out.write("\t\tif(");
      out.print(list.size());
      out.write(" == 0 ){\r\n");
      out.write("\t\t\talert(\"장바구니에 담긴 상품이 존재하지 않습니다\");\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tlocation.href = \"/TAMINO/StoreCtrl?command=allOrder\";\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\tvar price = 0;\r\n");
      out.write("\tfor(i=0; i<$(\".price\").length; i++){\r\n");
      out.write("\t\tprice += parseInt($('.price').eq(i).text().replace(\",\", \"\"));\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tvar total = addComma(price + 2500);\r\n");
      out.write("\tprice = addComma(price);\r\n");
      out.write("\tvar text = addComma(price) + \"<br>+ 배송비(2,500원)\" + \"<br>=\" + addComma(total);\r\n");
      out.write("\t$('.total').html(text);\r\n");
      out.write("\t\t\r\n");
      out.write("\tfunction addComma(num) {\r\n");
      out.write("\r\n");
      out.write("\t\t  // 문자열 길이가 3과 같거나 작은 경우 입력 값을 그대로 리턴\r\n");
      out.write("\t\t  if (num.length <= 3) {\r\n");
      out.write("\t\t    return num;\r\n");
      out.write("\t\t  }\r\n");
      out.write("\r\n");
      out.write("\t\t  // 3단어씩 자를 반복 횟수 구하기\r\n");
      out.write("\t\t  var count = Math.floor((num.length - 1) / 3);\r\n");
      out.write("\r\n");
      out.write("\t\t  // 결과 값을 저정할 변수\r\n");
      out.write("\t\t  var result = \"\";\r\n");
      out.write("\r\n");
      out.write("\t\t  // 문자 뒤쪽에서 3개를 자르며 콤마(,) 추가\r\n");
      out.write("\t\t  for (var i = 0; i < count; i++) {\r\n");
      out.write("\r\n");
      out.write("\t\t    // 마지막 문자(length)위치 - 3 을 하여 마지막인덱스부터 세번째 문자열 인덱스값 구하기\r\n");
      out.write("\t\t    var length = num.length;\r\n");
      out.write("\t\t    var strCut = num.substr(length - 3, length);\r\n");
      out.write("\t\t    // 반복문을 통해 value 값은 뒤에서 부터 세자리씩 값이 리턴됨.\r\n");
      out.write("\r\n");
      out.write("\t\t    // 입력값 뒷쪽에서 3개의 문자열을 잘라낸 나머지 값으로 입력값 갱신\r\n");
      out.write("\t\t    num = num.slice(0, length - 3);\r\n");
      out.write("\r\n");
      out.write("\t\t    // 콤마(,) + 신규로 자른 문자열 + 기존 결과 값\r\n");
      out.write("\t\t    result = \",\" + strCut + result;\r\n");
      out.write("\t\t  }\r\n");
      out.write("\r\n");
      out.write("\t\t  // 마지막으로 루프를 돌고 남아 있을 입력값(value)을 최종 결과 앞에 추가\r\n");
      out.write("\t\t  result = num + result;\r\n");
      out.write("\r\n");
      out.write("\t\t  // 최종값 리턴\r\n");
      out.write("\t\t  return result;\r\n");
      out.write("\t\t}  \r\n");
      out.write("\t\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("function openNav() {\r\n");
      out.write("  document.getElementById(\"myNav\").style.width = \"100%\";\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function closeNav() {\r\n");
      out.write("  document.getElementById(\"myNav\").style.width = \"0%\";\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script src=\"/TAMINO/Store/scrollevent.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
